{"version":3,"sources":["components/Setup.tsx","components/PlayerScore.tsx","App.tsx","index.tsx"],"names":["Setup","startSet","playersSet","players","useState","playersCount","playersCountSet","Text","Container","Button","onClick","prev","range","map","el","i","Input","type","onChange","e","prevArr","Object","assign","target","value","styled","button","div","input","PlayerScore","player","scores","scoresSet","score","scoreSet","sum","reduce","a","b","FlexRow","Score","SmallButton","filter","index","deleteScore","SubmitContainer","onSubmit","preventDefault","oldArray","Number","form","App","start","Row","id","_uniqueId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAwCeA,EA/BU,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WACpC,GAD8D,EAAdC,QACRC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,qCACE,cAACC,EAAD,0BACA,eAACC,EAAD,WACGH,EAAe,EACd,cAACI,EAAD,CAAQC,QAAS,kBAAMJ,GAAgB,SAACK,GAAD,OAAUA,EAAO,MAAxD,eACE,KACJ,cAACJ,EAAD,UAAOF,IACP,cAACI,EAAD,CAAQC,QAAS,kBAAMJ,GAAgB,SAACK,GAAD,OAAUA,EAAO,MAAxD,kBAEDC,IAAMP,GAAcQ,KAAI,SAACC,EAAIC,GAC5B,OACE,cAACC,EAAD,CAEEC,KAAK,OACLC,SAAU,SAACC,GAAD,OACRjB,GAAW,SAACkB,GACV,OAAOC,OAAOC,OAAO,GAAIF,EAAlBC,OAAA,IAAAA,CAAA,GAA8BP,EAAKK,EAAEI,OAAOC,aAJlDT,MAUX,cAACN,EAAD,CAAQC,QAAS,kBAAMT,GAAS,IAAhC,qCAMOQ,EAASgB,IAAOC,OAAV,+XAeNnB,EAAOkB,IAAOE,IAAV,yFAKXnB,EAAYiB,IAAOE,IAAV,yFAKFX,EAAQS,IAAOG,MAAV,qM,yBCpBHC,EAtCgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChC,EAA4B1B,mBAAmB,IAA/C,mBAAO2B,EAAP,KAAeC,EAAf,KACA,EAA0B5B,mBAAS,GAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KAMMC,EAAMJ,EAAOK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAI3C,OACE,gCACE,cAAC/B,EAAD,UACE,4BAAIuB,MAELC,EAAOlB,KAAI,SAACC,EAAIC,GACf,OACE,eAACwB,EAAD,WACE,cAACC,EAAD,UAAQ1B,IACR,cAAC2B,EAAD,CAAa/B,QAAS,kBAZZ,SAACK,GACnBiB,GAAU,SAACrB,GAAD,OAAUA,EAAK+B,QAAO,SAAC5B,EAAI6B,GAAL,OAAe5B,GAAK4B,QAWhBC,CAAY7B,IAAxC,6BAIN,eAACR,EAAD,oBAAa4B,KACb,eAACU,EAAD,CAAiBC,SAvBA,SAAC3B,GACpBA,EAAE4B,iBACFf,GAAU,SAACgB,GAAD,4BAAkBA,GAAlB,CAA4Bf,OACtCC,EAAS,IAoBP,UACE,cAAC,EAAD,CACEjB,KAAK,SACLC,SAAU,SAACC,GAAD,OAAOe,EAASe,OAAO9B,EAAEI,OAAOC,SAC1CA,MAAOS,IAET,cAACQ,EAAD,CAAaxB,KAAK,SAAlB,0BAOFD,EAAQS,IAAOG,MAAV,6NASLW,EAAUd,IAAOE,IAAV,oHAMPa,EAAQf,IAAOE,IAAV,sEAILc,EAAchB,IAAOC,OAAV,yXAeXmB,EAAkBpB,IAAOyB,KAAV,kECjDNC,MA1Bf,WACE,MAA0B/C,oBAAS,GAAnC,mBAAOgD,EAAP,KAAcnD,EAAd,KACA,EAA8BG,mBAAmB,IAAjD,mBAAOD,EAAP,KAAgBD,EAAhB,KAEA,OACE,eAAC,EAAD,YACIkD,GACA,cAAC,EAAD,CAAOnD,SAAUA,EAAUC,WAAYA,EAAYC,QAASA,IAE7DiD,GACC,cAACC,EAAD,UACGlD,EAAQU,KAAI,SAACiB,GACZ,IAAMwB,EAAKC,IAAU,WAErB,OACE,8BACE,cAAC,EAAD,CAAazB,OAAQA,KADbwB,YAalB9C,EAAYiB,IAAOE,IAAV,6HAMT0B,EAAM5B,IAAOE,IAAV,sECnCT6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41417bb8.chunk.js","sourcesContent":["import React, { FC, useRef, useState } from \"react\";\nimport range from \"lodash/range\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  startSet: React.Dispatch<React.SetStateAction<boolean>>;\n  playersSet: React.Dispatch<React.SetStateAction<string[]>>;\n  players: string[];\n};\nconst Setup: FC<Props> = ({ startSet, playersSet, players }) => {\n  const [playersCount, playersCountSet] = useState(0);\n\n  return (\n    <>\n      <Text>Ile graczy?</Text>\n      <Container>\n        {playersCount > 0 ? (\n          <Button onClick={() => playersCountSet((prev) => prev - 1)}>-</Button>\n        ) : null}\n        <Text>{playersCount}</Text>\n        <Button onClick={() => playersCountSet((prev) => prev + 1)}>+</Button>\n      </Container>\n      {range(playersCount).map((el, i) => {\n        return (\n          <Input\n            key={i}\n            type=\"text\"\n            onChange={(e) =>\n              playersSet((prevArr) => {\n                return Object.assign([], prevArr, { [el]: e.target.value });\n              })\n            }\n          />\n        );\n      })}\n      <Button onClick={() => startSet(true)}>Rozpocznij grę</Button>\n    </>\n  );\n};\n\nexport default Setup;\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  cursor: pointer;\n  color: rgb(74, 74, 74);\n  font-weight: 400;\n  box-shadow: rgb(55 71 79 / 20%) 0px 0px 2px, rgb(0 0 0 / 10%) 0px 8px 12px;\n  max-width: 200px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 4px;\n  padding: 14px 16px;\n`;\nexport const Text = styled.div`\n  font-size: 24px;\n  margin: 0 8px;\n  text-align: center;\n`;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0;\n`;\nexport const Input = styled.input`\n  margin: 8px 0;\n  border: none;\n  outline: none;\n  box-shadow: rgb(55 71 79 / 20%) 0px 0px 2px, rgb(0 0 0 / 10%) 0px 8px 12px;\n  font-size: 20px;\n  padding: 4px;\n`;\n","import React, { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Setup\";\nimport { Text } from \"./Setup\";\n\ntype Props = {\n  player: string;\n};\nconst PlayerScore: FC<Props> = ({ player }) => {\n  const [scores, scoresSet] = useState<number[]>([]);\n  const [score, scoreSet] = useState(0);\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    scoresSet((oldArray) => [...oldArray, score]);\n    scoreSet(0);\n  };\n  const sum = scores.reduce((a, b) => a + b, 0);\n  const deleteScore = (i: number) => {\n    scoresSet((prev) => prev.filter((el, index) => i != index));\n  };\n  return (\n    <div>\n      <Text>\n        <b>{player}</b>\n      </Text>\n      {scores.map((el, i) => {\n        return (\n          <FlexRow>\n            <Score>{el}</Score>\n            <SmallButton onClick={() => deleteScore(i)}>Usuń</SmallButton>\n          </FlexRow>\n        );\n      })}\n      <Text>Suma: {sum}</Text>\n      <SubmitContainer onSubmit={handleSubmit}>\n        <Input\n          type=\"number\"\n          onChange={(e) => scoreSet(Number(e.target.value))}\n          value={score}\n        />\n        <SmallButton type=\"submit\">Dodaj</SmallButton>\n      </SubmitContainer>\n    </div>\n  );\n};\n\nexport default PlayerScore;\nconst Input = styled.input`\n  max-width: 60px;\n  border: none;\n  outline: none;\n  box-shadow: rgb(55 71 79 / 20%) 0px 0px 2px, rgb(0 0 0 / 10%) 0px 8px 12px;\n  font-size: 20px;\n  padding: 4px;\n  margin-right: 8px;\n`;\nconst FlexRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 4px 0;\n  justify-content: center;\n`;\nconst Score = styled.div`\n  margin-right: 4px;\n  font-size: 20px;\n`;\nconst SmallButton = styled.button`\n  border: none;\n  outline: none;\n  font-size: 14px;\n  line-height: 20px;\n  text-align: center;\n  cursor: pointer;\n  color: rgb(74, 74, 74);\n  font-weight: 400;\n  box-shadow: rgb(55 71 79 / 20%) 0px 0px 2px, rgb(0 0 0 / 10%) 0px 8px 12px;\n  max-width: 200px;\n  background-color: rgb(255, 255, 255);\n  border-radius: 4px;\n  padding: 8px;\n`;\nconst SubmitContainer = styled.form`\n  display: flex;\n  margin-top: 8px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Setup from \"./components/Setup\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport PlayerScore from \"./components/PlayerScore\";\n\nfunction App() {\n  const [start, startSet] = useState(false);\n  const [players, playersSet] = useState<string[]>([]);\n\n  return (\n    <Container>\n      {!start && (\n        <Setup startSet={startSet} playersSet={playersSet} players={players} />\n      )}\n      {start && (\n        <Row>\n          {players.map((player) => {\n            const id = _uniqueId(\"prefix-\");\n\n            return (\n              <div key={id}>\n                <PlayerScore player={player} />\n              </div>\n            );\n          })}\n        </Row>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}